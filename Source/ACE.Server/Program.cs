using System;
using System.Globalization;
using System.IO;
using System.Reflection;
using System.Runtime;
using System.Runtime.InteropServices;
using System.Threading;

using log4net;
using log4net.Config;

using ACE.Common;
using ACE.Database;
using ACE.DatLoader;
using ACE.Server.Command;
using ACE.Server.Managers;
using ACE.Server.Mods;
using ACE.Server.Network.Managers;
using System.Collections.Generic;
using System.Linq;

namespace ACE.Server
{
    partial class Program
    {
        /// <summary>
        /// The timeBeginPeriod function sets the minimum timer resolution for an application or device driver. Used to manipulate the timer frequency.
        /// https://docs.microsoft.com/en-us/windows/desktop/api/timeapi/nf-timeapi-timebeginperiod
        /// Important note: This function affects a global Windows setting. Windows uses the lowest value (that is, highest resolution) requested by any process.
        /// </summary>
        [DllImport("winmm.dll", EntryPoint="timeBeginPeriod")]
        public static extern uint MM_BeginPeriod(uint uMilliseconds);

        /// <summary>
        /// The timeEndPeriod function clears a previously set minimum timer resolution
        /// https://docs.microsoft.com/en-us/windows/desktop/api/timeapi/nf-timeapi-timeendperiod
        /// </summary>
        [DllImport("winmm.dll", EntryPoint = "timeEndPeriod")]
        public static extern uint MM_EndPeriod(uint uMilliseconds);

        private static readonly ILog log = LogManager.GetLogger(MethodBase.GetCurrentMethod().DeclaringType);

        public static readonly bool IsRunningInContainer = Convert.ToBoolean(Environment.GetEnvironmentVariable("DOTNET_RUNNING_IN_CONTAINER"));
        private static List<ulong> CharacterLevelXPListMOD = new List<ulong>()
        {
            {217642723982},
            {244154367342},
            {270761592585},
            {297464753299},
            {324264204412},
            {351160302191},
            {378153404251},
            {405243869559},
            {432432058439},
            {459718332576},
            {487103055025},
            {514586590210},
            {542169303935},
            {569851563388},
            {597633737142},
            {625516195165},
            {653499308826},
            {681583450893},
            {709768995548},
            {738056318386},
            {766445796420},
            {794937808091},
            {823532733270},
            {852230953264},
            {881032850821},
            {909938810136},
            {938949216857},
            {968064458090},
            {997284922405},
            {1026610999839},
            {1056043081906},
            {1085581561597},
            {1115226833391},
            {1144979293258},
            {1174839338664},
            {1204807368577},
            {1234883783476},
            {1265068985350},
            {1295363377710},
            {1325767365592},
            {1356281355561},
            {1386905755721},
            {1417640975718},
            {1448487426745},
            {1479445521550},
            {1510515674442},
            {1541698301293},
            {1572993819550},
            {1604402648235},
            {1635925207955},
            {1667561920904},
            {1699313210875},
            {1731179503260},
            {1763161225059},
            {1795258804884},
            {1827472672968},
            {1859803261170},
            {1892251002978},
            {1924816333521},
            {1957499689568},
            {1990301509541},
            {2023222233516},
            {2056262303233},
            {2089422162099},
            {2122702255197},
            {2156103029289},
            {2189624932826},
            {2223268415952},
            {2257033930511},
            {2290921930052},
            {2324932869837},
            {2359067206848},
            {2393325399791},
            {2427707909104},
            {2462215196963},
            {2496847727288},
            {2531605965752},
            {2566490379784},
            {2601501438577},
            {2636639613095},
            {2671905376079},
            {2707299202054},
            {2742821567335},
            {2778472950035},
            {2814253830069},
            {2850164689164},
            {2886206010863},
            {2922378280533},
            {2958681985372},
            {2995117614415},
            {3031685658539},
            {3068386610477},
            {3105220964813},
            {3142189218001},
            {3179291868364},
            {3216529416104},
            {3253902363306},
            {3291411213951},
            {3329056473917},
            {3366838650987},
            {3404758254859},
            {3442815797150},
            {3481011791406},
            {3519346753104},
            {3557821199665},
            {3596435650459},
            {3635190626808},
            {3674086652001},
            {3713124251293},
            {3752303951920},
            {3791626283100},
            {3831091776043},
            {3870700963958},
            {3910454382061},
            {3950352567579},
            {3990396059764},
            {4030585399892},
            {4070921131278},
            {4111403799277},
            {4152033951298},
            {4192812136804},
            {4233738907326},
            {4274814816468},
            {4316040419912},
            {4357416275431},
            {4398942942891},
            {4440620984263},
            {4482450963627},
            {4524433447183},
            {4566569003256},
            {4608858202305},
            {4651301616930},
            {4693899821881},
            {4736653394065},
            {4779562912551},
            {4822628958583},
            {4865852115586},
            {4909232969171},
            {4952772107146},
            {4996470119522},
            {5040327598522},
            {5084345138590},
            {5128523336396},
            {5172862790847},
            {5217364103092},
            {5262027876532},
            {5306854716829},
            {5351845231912},
            {5397000031985},
            {5442319729537},
            {5487804939349},
            {5533456278500},
            {5579274366382},
            {5625259824699},
            {5671413277482},
            {5717735351095},
            {5764226674243},
            {5810887877981},
            {5857719595720},
            {5904722463241},
            {5951897118697},
            {5999244202624},
            {6046764357950},
            {6094458230003},
            {6142326466519},
            {6190369717651},
            {6238588635976},
            {6286983876507},
            {6335556096698},
            {6384305956453},
            {6433234118137},
            {6482341246582},
            {6531628009096},
            {6581095075475},
            {6630743118007},
            {6680572811481},
            {6730584833201},
            {6780779862988},
            {6831158583193},
            {6881721678705},
            {6932469836960},
            {6983403747946},
            {7034524104219},
            {7085831600905},
            {7137326935713},
            {7189010808943},
            {7240883923494},
            {7292946984872},
            {7345200701205},
            {7397645783242},
            {7450282944371},
            {7503112900623},
            {7556136370684},
            {7609354075901},
            {7662766740294},
            {7716375090562},
            {7770179856095},
            {7824181768982},
            {7878381564022},
            {7932779978727},
            {7987377753340},
            {8042175630838},
            {8097174356942},
            {8152374680129},
            {8207777351639},
            {8263383125485},
            {8319192758462},
            {8375207010157},
            {8431426642956},
            {8487852422059},
            {8544485115482},
            {8601325494072},
            {8658374331513},
            {8715632404340},
            {8773100491941},
            {8830779376575},
            {8888669843376},
            {8946772680361},
            {9005088678447},
            {9063618631453},
            {9122363336114},
            {9181323592088},
            {9240500201968},
            {9299893971289},
            {9359505708539},
            {9419336225170},
            {9479386335605},
            {9539656857249},
            {9600148610499},
            {9660862418754},
            {9721799108424},
            {9782959508937},
            {9844344452755},
            {9905954775378},
            {9967791315359},
            {10029854914307},
            {10092146416904},
            {10154666670910},
            {10217416527173},
            {10280396839644},
            {10343608465379},
            {10407052264555},
            {10470729100478},
            {10534639839592},
            {10598785351489},
            {10663166508921},
            {10727784187808},
            {10792639267246},
            {10857732629524},
            {10923065160125},
            {10988637747743},
            {11054451284288},
            {11120506664900},
            {11186804787956},
            {11253346555083},
            {11320132871163},
            {11387164644351},
            {11454442786075},
            {11521968211055},
            {11589741837309},
            {11657764586161},
            {11726037382256},
            {11794561153567},
            {11863336831405},
            {11932365350429},
            {12001647648658},
            {12071184667481},
            {12140977351662},
            {12211026649358},
            {12281333512123},
            {12351898894920},
            {12422723756133},
            {12493809057574},
            {12565155764495},
            {12636764845597},
            {12708637273041},
            {12780774022458},
            {12853176072959},
            {12925844407145},
            {12998780011116},
            {13071983874484},
            {13145456990379},
            {13219200355465},
            {13293214969942},
            {13367501837565},
            {13442061965645},
            {13516896365069},
            {13592006050299},
            {13667392039393},
            {13743055354007},
            {13818997019409},
            {13895218064488},
            {13971719521764},
            {14048502427397},
            {14125567821201},
            {14202916746647},
            {14280550250881},
            {14358469384728},
            {14436675202705},
            {14515168763029},
            {14593951127630},
            {14673023362157},
            {14752386535990},
            {14832041722251},
            {14911989997812},
            {14992232443306},
            {15072770143136},
            {15153604185486},
            {15234735662328},
            {15316165669436},
            {15397895306394},
            {15479925676603},
            {15562257887297},
            {15644893049544},
            {15727832278265},
            {15811076692237},
            {15894627414106},
            {15978485570395},
            {16062652291514},
            {16147128711770},
            {16231915969377},
            {16317015206463},
            {16402427569082},
            {16488154207225},
            {16574196274823},
            {16660554929764},
            {16747231333897},
            {16834226653044},
            {16921542057009},
            {17009178719584},
            {17097137818564},
            {17185420535753},
            {17274028056970},
            {17362961572066},
            {17452222274923},
            {17541811363474},
            {17631730039701},
            {17721979509654},
            {17812560983452},
            {17903475675295},
            {17994724803474},
            {18086309590379},
            {18178231262504},
            {18270491050462},
            {18363090188989},
            {18456029916953},
            {18549311477364},
            {18642936117382},
            {18736905088324},
            {18831219645674},
            {18925881049090},
            {19020890562412},
            {19116249453673},
            {19211958995102},
            {19308020463137},
            {19404435138427},
            {19501204305848},
            {19598329254502},
            {19695811277732},
            {19793651673125},
            {19891851742519},
            {19990412792016},
            {20089336131983},
            {20188623077063},
            {20288274946181},
            {20388293062551},
            {20488678753684},
            {20589433351394},
            {20690558191804},
            {20792054615356},
            {20893923966814},
            {20996167595272},
            {21098786854162},
            {21201783101257},
            {21305157698681},
            {21408912012913},
            {21513047414792},
            {21617565279525},
            {21722466986695},
            {21827753920260},
            {21933427468566},
            {22039489024346},
            {22145939984731},
            {22252781751252},
            {22360015729846},
            {22467643330861},
            {22575665969060},
            {22684085063629},
            {22792902038177},
            {22902118320744},
            {23011735343804},
            {23121754544269},
            {23232177363495},
            {23343005247282},
            {23454239645882},
            {23565882014002},
            {23677933810803},
            {23790396499911},
            {23903271549412},
            {24016560431863},
            {24130264624287},
            {24244385608183},
            {24358924869522},
            {24473883898756},
            {24589264190814},
            {24705067245107},
            {24821294565530},
            {24937947660465},
            {25055028042778},
            {25172537229825},
            {25290476743448},
            {25408848109983},
            {25527652860254},
            {25646892529576},
            {25766568657757},
            {25886682789096},
            {26007236472381},
            {26128231260895},
            {26249668712407},
            {26371550389179},
            {26493877857960},
            {26616652689985},
            {26739876460978},
            {26863550751143},
            {26987677145169},
            {27112257232224},
            {27237292605952},
            {27362784864472},
            {27488735610376},
            {27615146450721},
            {27742018997031},
            {27869354865291},
            {27997155675941},
            {28125423053874},
            {28254158628431},
            {28383364033395},
            {28513040906985},
            {28643190891855},
            {28773815635082},
            {28904916788164},
            {29036496007011},
            {29168554951939},
            {29301095287666},
            {29434118683298},
            {29567626812326},
            {29701621352617},
            {29836103986403},
            {29971076400277},
            {30106540285178},
            {30242497336385},
            {30378949253507},
            {30515897740468},
            {30653344505505},
            {30791291261147},
            {30929739724211},
            {31068691615785},
            {31208148661218},
            {31348112590106},
            {31488585136283},
            {31629568037798},
            {31771063036910},
            {31913071880069},
            {32055596317902},
            {32198638105196},
            {32342199000886},
            {32486280768032},
            {32630885173808},
            {32776013989482},
            {32921668990397},
            {33067851955955},
            {33214564669595},
            {33361808918776},
            {33509586494956},
            {33657899193571},
            {33806748814014},
            {33956137159612},
            {34106066037607},
            {34256537259128},
            {34407552639172},
            {34559113996578},
            {34711223154001},
            {34863881937888},
            {35017092178453},
            {35170855709648},
            {35325174369135},
            {35480049998261},
            {35635484442029},
            {35791479549063},
            {35948037171587},
            {36105159165384},
            {36262847389774},
            {36421103707575},
            {36579929985071},
            {36739328091980},
            {36899299901420},
            {37059847289869},
            {37220972137132},
            {37382676326306},
            {37544961743735},
            {37707830278980},
            {37871283824773},
            {38035324276975},
            {38199953534544},
            {38365173499481},
            {38530986076794},
            {38697393174451},
            {38864396703337},
            {39031998577203},
            {39200200712624},
            {39369005028947},
            {39538413448245},
            {39708427895262},
            {39879050297367},
            {40050282584497},
            {40222126689104},
            {40394584546104},
            {40567658092815},
            {40741349268906},
            {40915660016332},
            {41090592279280},
            {41266148004108},
            {41442329139276},
            {41619137635293},
            {41796575444644},
            {41974644521727},
            {42153346822786},
            {42332684305842},
            {42512658930620},
            {42693272658483},
            {42874527452354},
            {43056425276642},
            {43238968097168},
            {43422157881086},
            {43605996596804},
            {43790486213900},
            {43975628703046},
            {44161426035918},
            {44347880185111},
            {44534993124053},
            {44722766826914},
            {44911203268518},
            {45100304424244},
            {45290072269934},
            {45480508781798},
            {45671615936312},
            {45863395710118},
            {46055850079920},
            {46248981022381},
            {46442790514015},
            {46637280531076},
            {46832453049448},
            {47028310044530},
            {47224853491122},
            {47422085363302},
            {47620007634309},
            {47818622276419},
            {48017931260816},
            {48217936557469},
            {48418640134993},
            {48620043960522},
            {48822149999570},
            {49024960215891},
            {49228476571335},
            {49432701025708},
            {49637635536619},
            {49843282059329},
            {50049642546601},
            {50256718948535},
            {50464513212416},
            {50673027282542},
            {50882263100059},
            {51092222602793},
            {51302907725070},
            {51514320397542},
            {51726462547000},
            {51939336096193},
            {52152942963636},
            {52367285063416},
            {52582364304991},
            {52798182592993},
            {53014741827018},
            {53232043901415},
            {53450090705071},
            {53668884121190},
            {53888426027069},
            {54108718293867},
            {54329762786367},
            {54551561362744},
            {54774115874310},
            {54997428165268},
            {55221500072456},
            {55446333425082},
            {55671930044456},
            {55898291743718},
            {56125420327556},
            {56353317591920},
            {56581985323726},
            {56811425300560},
            {57041639290366},
            {57272629051139},
            {57504396330594},
            {57736942865845},
            {57970270383064},
            {58204380597138},
            {58439275211314},
            {58674955916840},
            {58911424392593},
            {59148682304700},
            {59386731306150},
            {59625573036394},
            {59865209120942},
            {60105641170939},
            {60346870782740},
            {60588899537470},
            {60831729000571},
            {61075360721344},
            {61319796232474},
            {61565037049538},
            {61811084670516},
            {62057940575267},
            {62305606225014},
            {62554083061797},
            {62803372507920},
            {63053475965381},
            {63304394815287},
            {63556130417254},
            {63808684108785},
            {64062057204635},
            {64316250996158},
            {64571266750633},
            {64827105710572},
            {65083769093006},
            {65341258088751},
            {65599573861655},
            {65858717547815},
            {66118690254777},
            {66379493060707},
            {66641127013539},
            {66903593130096},
            {67166892395178},
            {67431025760630},
            {67695994144370},
            {67961798429388},
            {68228439462719},
            {68495918054369},
            {68764234976211},
            {69033390960846},
            {69303386700414},
            {69574222845375},
            {69845900003235},
            {70118418737234},
            {70391779564979},
            {70665982957032},
            {70941029335436},
            {71216919072197},
            {71493652487691},
            {71771229849019},
            {72049651368293},
            {72328917200849},
            {72609027443388},
            {72889982132042},
            {73171781240346},
            {73454424677135},
            {73737912284338},
            {74022243834677},
            {74307419029259},
            {74593437495054},
            {74880298782255},
            {75168002361510},
            {75456547621018},
            {75745933863472},
            {76036160302856},
            {76327226061067},
            {76619130164356},
            {76911871539579},
            {77205449010237},
            {77499861292291},
            {77795106989733},
            {78091184589894},
            {78388092458464},
            {78685828834209},
            {78984391823342},
            {79283779393533},
            {79583989367512},
            {79885019416238},
            {80186867051579},
            {80489529618471},
            {80793004286481},
            {81097288040738},
            {81402377672132},
            {81708269766735},
            {82014960694320},
            {82322446595903},
            {82630723370159},
            {82939786658600},
            {83249631829330},
            {83560253959196},
            {83871647814113},
            {84183807827295},
            {84496728075074},
            {84810402249943},
            {85124823630355},
            {85439985046732},
            {85755878843028},
            {86072496832986},
            {86389830250081},
            {86707869689850},
            {87026605042938},
            {87346025416760},
            {87666119042995},
            {87986873167240},
            {88308273915894},
            {88630306133478},
            {88952953180874},
            {89276196680829},
            {89600016190461},
            {89924388769842},
            {90249288397361},
            {90574685149459},
            {90900543998472},
            {91226822948074},
            {91553469910712},
            {91880416867115},
            {92207566845130},
            {92534753219632}
        };
        private static List<uint> CharacterLevelSkillCreditListMOD = new List<uint>()
        {
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {1},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {1},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {1},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {1},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {1},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {1},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {1},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {1},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {1},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {1},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {1},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {1},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {1},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {1},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {1},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {1},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {1},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {1},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {1},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {1},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {1},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {1},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {1},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {1},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0},
            {0}
        };

        public static void Main(string[] args)
        {
            var consoleTitle = $"ACEmulator - v{ServerBuildInfo.FullVersion}";

            Console.Title = consoleTitle;

            AppDomain.CurrentDomain.UnhandledException += CurrentDomain_UnhandledException;
            AppDomain.CurrentDomain.ProcessExit += new EventHandler(OnProcessExit);

            // Typically, you wouldn't force the current culture on an entire application unless you know sure your application is used in a specific region (which ACE is not)
            // We do this because almost all of the client/user input/output code does not take culture into account, and assumes en-US formatting.
            // Without this, many commands that require special characters like , and . will break
            Thread.CurrentThread.CurrentCulture = new CultureInfo("en-US");
            // Init our text encoding options. This will allow us to use more than standard ANSI text, which the client also supports.
            System.Text.Encoding.RegisterProvider(System.Text.CodePagesEncodingProvider.Instance);

            // Look for the log4net.config first in the current environment directory, then in the ExecutingAssembly location
            var exeLocation = Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location);
            var containerConfigDirectory = "/ace/Config";
            var log4netConfig = Path.Combine(exeLocation, "log4net.config");
            var log4netConfigExample = Path.Combine(exeLocation, "log4net.config.example");
            var log4netConfigContainer = Path.Combine(containerConfigDirectory, "log4net.config");

            if (IsRunningInContainer && File.Exists(log4netConfigContainer))
                File.Copy(log4netConfigContainer, log4netConfig, true);

            var log4netFileInfo = new FileInfo("log4net.config");
            if (!log4netFileInfo.Exists)
                log4netFileInfo = new FileInfo(log4netConfig);

            if (!log4netFileInfo.Exists)
            {
                var exampleFile = new FileInfo(log4netConfigExample);
                if (!exampleFile.Exists)
                {
                    Console.WriteLine("log4net Configuration file is missing.  Please copy the file log4net.config.example to log4net.config and edit it to match your needs before running ACE.");
                    throw new Exception("missing log4net configuration file");
                }
                else
                {
                    if (!IsRunningInContainer)
                    {
                        Console.WriteLine("log4net Configuration file is missing,  cloning from example file.");
                        File.Copy(log4netConfigExample, log4netConfig);
                    }
                    else
                    {                        
                        if (!File.Exists(log4netConfigContainer))
                        {
                            Console.WriteLine("log4net Configuration file is missing, ACEmulator is running in a container,  cloning from docker file.");
                            var log4netConfigDocker = Path.Combine(exeLocation, "log4net.config.docker");
                            File.Copy(log4netConfigDocker, log4netConfig);
                            File.Copy(log4netConfigDocker, log4netConfigContainer);
                        }
                        else
                        {
                            File.Copy(log4netConfigContainer, log4netConfig);
                        }

                    }
                }
            }

            var logRepository = LogManager.GetRepository(Assembly.GetEntryAssembly());
            XmlConfigurator.ConfigureAndWatch(logRepository, log4netFileInfo);

            if (Environment.ProcessorCount < 2)
                log.Warn("Only one vCPU was detected. ACE may run with limited performance. You should increase your vCPU count for anything more than a single player server.");

            // Do system specific initializations here
            try
            {
                if (RuntimeInformation.IsOSPlatform(OSPlatform.Windows))
                {
                    // On many windows systems, the default resolution for Thread.Sleep is 15.6ms. This allows us to command a tighter resolution
                    MM_BeginPeriod(1);
                }
            }
            catch (Exception ex)
            {
                log.Error(ex.ToString());
            }

            log.Info("Starting ACEmulator...");

            if (IsRunningInContainer)
                log.Info("ACEmulator is running in a container...");
            
            var configFile = Path.Combine(exeLocation, "Config.js");
            var configConfigContainer = Path.Combine(containerConfigDirectory, "Config.js");

            if (IsRunningInContainer && File.Exists(configConfigContainer))
                File.Copy(configConfigContainer, configFile, true);

            if (!File.Exists(configFile))
            {
                if (!IsRunningInContainer)
                    DoOutOfBoxSetup(configFile);
                else
                {
                    if (!File.Exists(configConfigContainer))
                    {
                        DoOutOfBoxSetup(configFile);
                        File.Copy(configFile, configConfigContainer);
                    }
                    else
                        File.Copy(configConfigContainer, configFile);
                }
            }

            log.Info("Initializing ConfigManager...");
            ConfigManager.Initialize();

            log.Info("Initializing ModManager...");
            ModManager.Initialize();

            if (ConfigManager.Config.Server.WorldName != "ACEmulator")
            {
                consoleTitle = $"{ConfigManager.Config.Server.WorldName} | {consoleTitle}";
                Console.Title = consoleTitle;
            }

            if (ConfigManager.Config.Offline.PurgeDeletedCharacters)
            {
                log.Info($"Purging deleted characters, and their possessions, older than {ConfigManager.Config.Offline.PurgeDeletedCharactersDays} days ({DateTime.Now.AddDays(-ConfigManager.Config.Offline.PurgeDeletedCharactersDays)})...");
                ShardDatabaseOfflineTools.PurgeCharactersInParallel(ConfigManager.Config.Offline.PurgeDeletedCharactersDays, out var charactersPurged, out var playerBiotasPurged, out var possessionsPurged);
                log.Info($"Purged {charactersPurged:N0} characters, {playerBiotasPurged:N0} player biotas and {possessionsPurged:N0} possessions.");
            }

            if (ConfigManager.Config.Offline.PurgeOrphanedBiotas)
            {
                log.Info($"Purging orphaned biotas...");
                ShardDatabaseOfflineTools.PurgeOrphanedBiotasInParallel(out var numberOfBiotasPurged);
                log.Info($"Purged {numberOfBiotasPurged:N0} biotas.");
            }

            if (ConfigManager.Config.Offline.PruneDeletedCharactersFromFriendLists)
            {
                log.Info($"Pruning invalid friends from all friend lists...");
                ShardDatabaseOfflineTools.PruneDeletedCharactersFromFriendLists(out var numberOfFriendsPruned);
                log.Info($"Pruned {numberOfFriendsPruned:N0} invalid friends found on friend lists.");
            }

            if (ConfigManager.Config.Offline.PruneDeletedObjectsFromShortcutBars)
            {
                log.Info($"Pruning invalid shortcuts from all shortcut bars...");
                ShardDatabaseOfflineTools.PruneDeletedObjectsFromShortcutBars(out var numberOfShortcutsPruned);
                log.Info($"Pruned {numberOfShortcutsPruned:N0} deleted objects found on shortcut bars.");
            }

            if (ConfigManager.Config.Offline.PruneDeletedCharactersFromSquelchLists)
            {
                log.Info($"Pruning invalid squelches from all squelch lists...");
                ShardDatabaseOfflineTools.PruneDeletedCharactersFromSquelchLists(out var numberOfSquelchesPruned);
                log.Info($"Pruned {numberOfSquelchesPruned:N0} invalid squelched characters found on squelch lists.");
            }

            if (ConfigManager.Config.Offline.AutoServerUpdateCheck)
                CheckForServerUpdate();
            else
                log.Info($"AutoServerVersionCheck is disabled...");

            if (ConfigManager.Config.Offline.AutoUpdateWorldDatabase)
            {
                CheckForWorldDatabaseUpdate();

                if (ConfigManager.Config.Offline.AutoApplyWorldCustomizations)
                    AutoApplyWorldCustomizations();
            }
            else
                log.Info($"AutoUpdateWorldDatabase is disabled...");

            if (ConfigManager.Config.Offline.AutoApplyDatabaseUpdates)
                AutoApplyDatabaseUpdates();
            else
                log.Info($"AutoApplyDatabaseUpdates is disabled...");

            // This should only be enabled manually. To enable it, simply uncomment this line
            //ACE.Database.OfflineTools.Shard.BiotaGuidConsolidator.ConsolidateBiotaGuids(0xA0000000, true, false, out int numberOfBiotasConsolidated, out int numberOfBiotasSkipped, out int numberOfErrors);
            //ACE.Database.OfflineTools.Shard.BiotaGuidConsolidator.ConsolidateBiotaGuids(0xD0000000, false, true, out int numberOfBiotasConsolidated2, out int numberOfBiotasSkipped2, out int numberOfErrors2);

            ShardDatabaseOfflineTools.CheckForBiotaPropertiesPaletteOrderColumnInShard();

            // pre-load starterGear.json, abort startup if file is not found as it is required to create new characters.
            if (Factories.StarterGearFactory.GetStarterGearConfiguration() == null)
            {
                log.Fatal("Unable to load or parse starterGear.json. ACEmulator will now abort startup.");
                ServerManager.StartupAbort();
                Environment.Exit(0);
            }

            log.Info("Initializing ServerManager...");
            ServerManager.Initialize();

            log.Info("Initializing DatManager...");
            DatManager.Initialize(ConfigManager.Config.Server.DatFilesDirectory, true);

            if (ConfigManager.Config.DDD.EnableDATPatching)
            {
                log.Info("Initializing DDDManager...");
                DDDManager.Initialize();
            }
            else
                log.Info("DAT Patching Disabled...");

            log.Info("Initializing DatabaseManager...");
            DatabaseManager.Initialize();

            if (DatabaseManager.InitializationFailure)
            {
                log.Fatal("DatabaseManager initialization failed. ACEmulator will now abort startup.");
                ServerManager.StartupAbort();
                Environment.Exit(0);
            }
            else
            {
                var xpTable = DatManager.PortalDat.XpTable;
                if (xpTable.CharacterLevelXPList.Count <= 276)
                {
                    xpTable.CharacterLevelXPList.AddRange(CharacterLevelXPListMOD);
                    xpTable.CharacterLevelSkillCreditList.AddRange(CharacterLevelSkillCreditListMOD);
                    DatManager.PortalDat.XpTable = xpTable;
                }
                log.Info($" -- LevelMod active: {xpTable.CharacterLevelXPList.Count - 1} -- SkillCreditMod active: {xpTable.CharacterLevelSkillCreditList.Count - 1} / {xpTable.CharacterLevelSkillCreditList.Sum<uint>(i => (uint)i)}");
            }

            log.Info("Starting DatabaseManager...");
            DatabaseManager.Start();

            log.Info("Starting PropertyManager...");
            PropertyManager.Initialize();

            log.Info("Initializing GuidManager...");
            GuidManager.Initialize();

            if (!string.IsNullOrEmpty(ConfigManager.Config.Chat.DiscordToken))
            {
                log.Info("Attempting to start Discord Client...");
                DiscordChatManager.Initialize();
            }

            if (ConfigManager.Config.Server.ServerPerformanceMonitorAutoStart)
            {
                log.Info("Server Performance Monitor auto starting...");
                ServerPerformanceMonitor.Start();
            }

            if (ConfigManager.Config.Server.WorldDatabasePrecaching)
            {
                log.Info("Precaching Weenies...");
                DatabaseManager.World.CacheAllWeenies();
                log.Info("Precaching Cookbooks...");
                DatabaseManager.World.CacheAllCookbooks();
                log.Info("Precaching Events...");
                DatabaseManager.World.GetAllEvents();
                log.Info("Precaching House Portals...");
                DatabaseManager.World.CacheAllHousePortals();
                log.Info("Precaching Points Of Interest...");
                DatabaseManager.World.CacheAllPointsOfInterest();
                log.Info("Precaching Spells...");
                DatabaseManager.World.CacheAllSpells();
                log.Info("Precaching Treasures - Death...");
                DatabaseManager.World.CacheAllTreasuresDeath();
                log.Info("Precaching Treasures - Material Base...");
                DatabaseManager.World.CacheAllTreasureMaterialBase();
                log.Info("Precaching Treasures - Material Groups...");
                DatabaseManager.World.CacheAllTreasureMaterialGroups();
                log.Info("Precaching Treasures - Material Colors...");
                DatabaseManager.World.CacheAllTreasureMaterialColor();
                log.Info("Precaching Treasures - Wielded...");
                DatabaseManager.World.CacheAllTreasureWielded();
            }
            else
                log.Info("Precaching World Database Disabled...");

            log.Info("Initializing PlayerManager...");
            PlayerManager.Initialize();

            log.Info("Initializing HouseManager...");
            HouseManager.Initialize();

            log.Info("Initializing InboundMessageManager...");
            InboundMessageManager.Initialize();

            log.Info("Initializing SocketManager...");
            SocketManager.Initialize();

            log.Info("Initializing WorldManager...");
            WorldManager.Initialize();

            log.Info("Initializing EventManager...");
            EventManager.Initialize();

            // Free up memory before the server goes online. This can free up 6 GB+ on larger servers.
            log.Info("Forcing .net garbage collection...");
            for (int i = 0; i < 10; i++)
            {
                // https://learn.microsoft.com/en-us/dotnet/standard/garbage-collection/fundamentals
                // https://learn.microsoft.com/en-us/dotnet/api/system.runtime.gcsettings.largeobjectheapcompactionmode
                GCSettings.LargeObjectHeapCompactionMode = GCLargeObjectHeapCompactionMode.CompactOnce;

                GC.Collect();
            }

            // This should be last
            log.Info("Initializing CommandManager...");
            CommandManager.Initialize();

            //Register mod commands
            log.Info("Registering ModManager commands...");
            ModManager.RegisterCommands();
            ModManager.ListMods();

            if (!PropertyManager.GetBool("world_closed", false).Item)
            {
                WorldManager.Open(null);
            }
        }

        private static void CurrentDomain_UnhandledException(object sender, UnhandledExceptionEventArgs e)
        {
            log.Error(e.ExceptionObject);
        }

        private static void OnProcessExit(object sender, EventArgs e)
        {
            if (!IsRunningInContainer)
            {
                if (!ServerManager.ShutdownInitiated)
                    log.Warn("Unsafe server shutdown detected! Data loss is possible!");

                PropertyManager.StopUpdating();
                DatabaseManager.Stop();

                // Do system specific cleanup here
                try
                {
                    if (RuntimeInformation.IsOSPlatform(OSPlatform.Windows))
                    {
                        MM_EndPeriod(1);
                    }
                }
                catch (Exception ex)
                {
                    log.Error(ex.ToString());
                }
            }
            else
            {
                ServerManager.DoShutdownNow();
                DatabaseManager.Stop();
            }
        }
    }
}
